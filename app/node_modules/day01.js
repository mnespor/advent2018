'use strict'

const fs = require('fs')
const R = require('ramda')

const readLines = require('util/read-lines')

const readInt = R.unary(parseInt)
const validNumbersTransducer = R.compose(R.map(readInt), R.reject(isNaN))
const sumStrings = R.transduce(validNumbersTransducer, R.add, 0)

const sampleInput = ['+1', '-2', '0', '-5']
console.log('sample:', sumStrings(sampleInput))

const input = readLines('input/01.txt')
console.log('part 1:', sumStrings(input))

// take a list and return a generator that infinitely repeats the elements of the list
function cycle(xs) {
    let idx = 0
    return (function* () {
        while(true) {
            yield xs[idx]
            idx = (idx + 1) % xs.length
        }
    })()
}

const nums = cycle(R.into([], validNumbersTransducer, input))
const seen = new Set()
let total = 0
while(true) {
    total += nums.next().value
    if (seen.has(total)) {
        console.log('part 2:', total)
        break
    }

    seen.add(total)
}
