const combinatorics = require('js-combinatorics')
const R = require('ramda')
const readLines = require('util/read-lines')

const input = readLines('input/02.txt')
const sample = ['abcde', 'fghij', 'klmno', 'pqrst', 'fguij', 'axcye', 'wvxyz']

// "fred", "free" => [false, false, false, true]
const positionDifferences = R.pipe(R.zip, R.map(R.apply(R.complement(R.equals))))
// not quite levenshtein
const distance = R.pipe(positionDifferences, R.filter(R.identity), R.length)
const pairs = xs => combinatorics.bigCombination(xs, 2).toArray()
const hasDistance1 = R.pipe(R.apply(distance), R.equals(1))
console.log('sample:', R.filter(hasDistance1, pairs(sample)))
console.log('part 2:', R.filter(hasDistance1, pairs(input)))
